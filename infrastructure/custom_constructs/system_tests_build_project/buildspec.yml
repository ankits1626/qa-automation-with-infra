version: 0.2

env:
  variables:
    # These will be set by the CodeBuild project
    ANDROID_PROJECT_ARN: ""
    IOS_PROJECT_ARN: ""

phases:
  pre_build:
    commands:
      - echo 'Execution started'
      - echo "Android Device Farm Project ARN:$ANDROID_PROJECT_ARN"
      - echo "iOS Device Farm Project ARN:$IOS_PROJECT_ARN"
      - echo "Environment variables:"
      - echo "S3_BUCKET=$S3_BUCKET"
      - echo "APP_FILE_PATH=$APP_FILE_PATH"
      - echo "APP_TYPE=$APP_TYPE"
      - echo "Current working directory:$(pwd)"
      - echo "Available directories:"
      - ls -la /workspace/
      - echo "Test suite directory contents:"
      - ls -la /workspace/test-suite/ || echo 'test-suite directory not found'
      
  build:
    commands:
      - echo 'Building test suite'
      - cd /workspace/test-suite
      - ./scripts/build-and-zip.sh
      - echo 'Test suite build completed'
      - ls -la system_tests.zip || echo 'system_tests.zip not found'
      
      - echo 'Downloading app file from S3'
      - aws s3 cp s3://$S3_BUCKET/$APP_FILE_PATH ./app_file
      - ls -la ./app_file
      
      - echo 'Determining Device Farm project based on app type'
      - |
        if [ "$APP_TYPE" = "ios" ]; then
          PROJECT_ARN="$IOS_PROJECT_ARN"
          echo 'Using iOS Device Farm project'
        elif [ "$APP_TYPE" = "android" ]; then
          PROJECT_ARN="$ANDROID_PROJECT_ARN"
          echo 'Using Android Device Farm project'
        else
          echo "Unknown app type: $APP_TYPE"
          exit 1
        fi
      
      - echo 'Uploading app to Device Farm'
      - |
        APP_UPLOAD=$(aws devicefarm create-upload \
          --project-arn $PROJECT_ARN \
          --name "app-$(date +%Y%m%d-%H%M%S)" \
          --type "${APP_TYPE^^}_APP" \
          --query 'upload.{arn:arn,url:url}' \
          --output json)
      
      - APP_ARN=$(echo $APP_UPLOAD | jq -r '.arn')
      - APP_URL=$(echo $APP_UPLOAD | jq -r '.url')
      - echo "App upload ARN:$APP_ARN"
      
      - curl -T ./app_file "$APP_URL"
      - echo 'App uploaded successfully'
      
      - echo 'Uploading test package to Device Farm'
      - |
        TEST_UPLOAD=$(aws devicefarm create-upload \
          --project-arn $PROJECT_ARN \
          --name "tests-$(date +%Y%m%d-%H%M%S)" \
          --type "APPIUM_NODE_TEST_PACKAGE" \
          --query 'upload.{arn:arn,url:url}' \
          --output json)
      
      - TEST_ARN=$(echo $TEST_UPLOAD | jq -r '.arn')
      - TEST_URL=$(echo $TEST_UPLOAD | jq -r '.url')
      - echo "Test upload ARN:$TEST_ARN"
      
      - curl -T ./system_tests.zip "$TEST_URL"
      - echo 'Test package uploaded successfully'
      
      - echo 'Getting device pool for project'
      - DEVICE_POOLS=$(aws devicefarm list-device-pools --arn $PROJECT_ARN --query 'devicePools[0].arn' --output text)
      - echo "Using device pool:$DEVICE_POOLS"
      
      - echo 'Scheduling Device Farm test run'
      - |
        RUN_RESULT=$(aws devicefarm schedule-run \
          --project-arn $PROJECT_ARN \
          --app-arn $APP_ARN \
          --device-pool-arn $DEVICE_POOLS \
          --name "SystemTest-$(date +%Y%m%d-%H%M%S)" \
          --test "type=APPIUM_NODE,testPackageArn=$TEST_ARN" \
          --query 'run.{arn:arn,name:name}' \
          --output json)
      
      - RUN_ARN=$(echo $RUN_RESULT | jq -r '.arn')
      - RUN_NAME=$(echo $RUN_RESULT | jq -r '.name')
      - echo 'Test run created:'
      - echo "Name:$RUN_NAME"
      - echo "ARN:$RUN_ARN"
      
      - echo 'Device Farm test run initiated successfully'
      - echo 'Monitor progress in AWS Device Farm console'